apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerBinding
metadata:
  name: publish-images-taskrun-to-release-logs
spec:
  params:
  - name: pipelineRun
    value: $(body.taskRun.metadata.labels.tekton\.dev/pipelineRun)
  - name: namespace
    value: $(body.taskRun.metadata.namespace)
  - name: bucket
    value: $(body.taskRun.spec.outputs.resources[?(@.name == 'bucket')].resourceRef.name)
  - name: versionTag
    value: $(body.taskRun.spec.inputs.params[?(@.name == 'versionTag')].value)
---
apiVersion: triggers.tekton.dev/v1alpha1
kind: EventListener
metadata:
  name: pipeline-release-post-processing
spec:
  serviceAccountName: release-right-meow
  triggers:
    - name: log-collection
      bindings:
        - ref: publish-images-taskrun-to-release-logs
      template:
        name: release-logs
---
apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerTemplate
metadata:
  name: release-logs
spec:
  params:
  - name: pipelineRun
    description: The name of the taskrun whose log we need to save
  - name: namespace
    description: The namespace of the taskrun
  - name: bucket
    description: The name of the bucket pipelineresource where to store the logs
  - name: versionTag
    description: The version tag to use within the bucket to store the logs
  resourcetemplates:
  - apiVersion: tekton.dev/v1beta1
    kind: TaskRun
    metadata:
      generateName: save-release-logs-$(uid)-
    spec:
      serviceAccountName: tekton-logs
      taskRef:
        name: save-release-logs
      params:
      - name: pipelinerun
        value: $(tt.params.pipelineRun)
      - name: namespace
        value: $(tt.params.namespace)
      - name: versionTag
        value: $(tt.params.versionTag)
        resources:
        - name: release-bucket
          resourceRef:
            name: $(tt.params.bucket)
      resources:
        outputs:
          - name: release-bucket
            resourceRef:
              name: $(tt.params.bucket)

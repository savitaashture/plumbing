apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerBinding
metadata:
  name: trigger-to-build-and-push-image
spec:
  params:
  - name: buildUUID
    value: $(body.buildUUID)
  - name: gitRepository
    value: $(body.gitRepository)
  - name: gitRevision
    value: $(body.gitRevision)
  - name: contextPath
    value: $(body.contextPath)
  - name: registry
    value: $(body.registry)
  - name: namespace
    value: $(body.namespace)
  - name: imageName
    value: $(body.imageName)
  - name: imageTag
    value: $(body.imageTag)
---
apiVersion: triggers.tekton.dev/v1alpha1
kind: EventListener
metadata:
  name: image-builder
spec:
  serviceAccountName: release-right-meow
  triggers:
    - name: trigger
      bindings:
        - ref: trigger-to-build-and-push-image
      template:
        name: build-and-push-image
---
apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerTemplate
metadata:
  name: build-and-push-image
spec:
  params:
  - name: gitRepository
    description: The git repository that hosts context and Dockerfile
  - name: gitRevision
    description: The Git revision to be used.
  - name: contextPath
    description: The path to the context within 'gitRepository'
  - name: registry
    description: The container registry *registry*/namespace/name tag
  - name: namespace
    description: The namespace (aka user, org, project) registry/*namespace*/name tag
  - name: imageName
    description: The image name (aka repository) registry/namespace/*name* tag
  - name: imageTag
    description: The image tag registry/namespace/name *tag*
  - name: buildUUID
    description: The build UUID is used for log collection
  resourcetemplates:
  - apiVersion: tekton.dev/v1beta1
    kind: TaskRun
    metadata:
      name: build-and-push-$(tt.params.imageName)-$(uid)
      labels:
        prow.k8s.io/build-id: $(tt.params.buildUUID)
        plumbing.tekton.dev/image: $(tt.params.imageName)
    spec:
      taskSpec:
        resources:
          inputs:
            - name: source
              type: git
          outputs:
            - name: image
              type: image
        steps:
        - name: build-and-push
          workingdir: $(resources.inputs.source.path)
          image: gcr.io/kaniko-project/executor:v0.13.0
          env:
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /secret/release.json
          command:
          - /kaniko/executor
          - --dockerfile=Dockerfile
          - --context=$(tt.params.contextPath)
          - --destination=$(resources.outputs.image.url)
          volumeMounts:
            - name: gcp-secret
              mountPath: /secret
        volumes:
          - name: gcp-secret
            secret:
              secretName: release-secret
      resources:
        inputs:
          - name: source
            resourceSpec:
              type: git
              params:
              - name: revision
                value: $(tt.params.gitRevision)
              - name: url
                value: https://$(tt.params.gitRepository)
        outputs:
          - name: image
            resourceSpec:
              type: image
              params:
              - name: url
                value: $(tt.params.registry)/$(tt.params.namespace)/$(tt.params.imageName):$(tt.params.imageTag)
